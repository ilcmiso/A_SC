<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>